==========
LpOD 0.9.0
==========

lpOD -- languages & platforms OpenDocument.
Definition of a Free Software API implementing the ISO/IEC 26300 standard.
Development, for higher level use cases, in Python, Perl and Ruby languages.
of a top-down oriented API.

This release focuses on style and table support, and polishing the existing
API. Command-line tools were greatly improved and enriched.

- Web: http://lpod-project.org
- Documentation: http://docs.lpod-project.org
- IRC: irc://irc.freenode.org/lpod

Low-level API
=============

- Default numeric types were added, targeting the French locale for now.

- The text API is now richer.

High-level API
==============

- Started to implement a templating language in the content of ODF documents.
  Only setting values and "if" are implemented for now, and only on text.

  You can see an example template in "python/templates/test_template.ott" and an
  example script in "python/templates/test_template.py".

  Templating the metadata is left as an exercise to the interested reader.

- Tables of content can now be filled with the titles found in the document.

- Draw page can use transitions (fade by default).

- Tables are quite faster and easier to use since you can access any
  row/column/cell without having to expand the table first.

- Most high-level elements support outputting reStructuredText representation.

- Medium-complexity reStructuredText documents can be converted to ODT, from
  scratch or appended to an existing document (docutils required).

Command-line Utilities
======================

- The lpod-show.py tool dumps a textual representation of the content (informal
  or reStructuredText). It can also dump the latter, images, style information
  and metadata list in a directory.

- The lpod-style.py introspection tool shows the list of styles of the
  document, whether it is used, and is able to remove them all. It can also
  merge styles from one document to another.

- The lpod-meta.py introspection tool can list and edit metadata of the
  document.

- The lpod-merge.py tool can merge documents of the same type. ODT, ODS and
  CSV and supported for now. ODP to come.

- The lpod-highlight.py tool can apply a style on a text pattern. The default
  style is overlining as if you were using a yellow highlighter pen.

- The lpod-mm2odt.py tool converts XML mind-map files to ODT.

- The lpod-rst2odt.py tool converts reStructuredText document to ODT.

Documentation
=============

- 80 % of the documentation is implemented. There is still much work on the
  styles part.


Packaging
=========

- PKGBUILD and ebuild packages contributed. Deb and RPM to come.
